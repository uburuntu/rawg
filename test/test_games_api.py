# coding: utf-8

"""
    RAWG Video Games Database API

     The largest open video games database.  ### Why build on RAWG - More than 350,000 games for 50 platforms including mobiles. - Rich metadata: tags, genres, developers, publishers, individual creators, official websites, release dates, Metacritic ratings. - Where to buy: links to digital distribution services - Similar games based on visual similarity. - Player activity data: Steam average playtime and RAWG player counts and ratings. - Actively developing and constantly getting better by user contribution and our algorithms.  ### Terms of Use - Free for personal use as long as you attribute RAWG as the source of the data and/or images and add an active hyperlink from every page where the data of RAWG is used. - Free for commercial use for startups and hobby projects with not more than 100,000 monthly active users or 500,000 page views per month. If your project is larger than that, email us at [api@rawg.io](mailto:api@rawg.io) for commercial terms. - No cloning. It would not be cool if you used our API to launch a clone of RAWG. We know it is not always easy to say what is a duplicate and what isn't. Drop us a line at [api@rawg.io](mailto:api@rawg.io) if you are in doubt, and we will talk it through. - You must include an API key with every request. The key can be obtained at https://rawg.io/apidocs. If you donâ€™t provide it, we may ban your requests.  __[Read more](https://rawg.io/apidocs)__.   # noqa: E501

    The version of the OpenAPI document: v1.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import rawg
from rawg.api.games_api import GamesApi  # noqa: E501
from rawg.rest import ApiException


class TestGamesApi(unittest.TestCase):
    """GamesApi unit test stubs"""

    def setUp(self):
        self.api = rawg.api.games_api.GamesApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_games_achievements_read(self):
        """Test case for games_achievements_read

        Get a list of game achievements.  # noqa: E501
        """
        pass

    def test_games_additions_list(self):
        """Test case for games_additions_list

        Get a list of DLC's for the game, GOTY and other editions, companion apps, etc.  # noqa: E501
        """
        pass

    def test_games_development_team_list(self):
        """Test case for games_development_team_list

        Get a list of individual creators that were part of the development team.  # noqa: E501
        """
        pass

    def test_games_game_series_list(self):
        """Test case for games_game_series_list

        Get a list of games that are part of the same series.  # noqa: E501
        """
        pass

    def test_games_list(self):
        """Test case for games_list

        Get a list of games.  # noqa: E501
        """
        pass

    def test_games_movies_read(self):
        """Test case for games_movies_read

        Get a list of game trailers.  # noqa: E501
        """
        pass

    def test_games_parent_games_list(self):
        """Test case for games_parent_games_list

        Get a list of parent games for DLC's and editions.  # noqa: E501
        """
        pass

    def test_games_read(self):
        """Test case for games_read

        Get details of the game.  # noqa: E501
        """
        pass

    def test_games_reddit_read(self):
        """Test case for games_reddit_read

        Get a list of most recent posts from the game's subreddit.  # noqa: E501
        """
        pass

    def test_games_screenshots_list(self):
        """Test case for games_screenshots_list

        Get screenshots for the game.  # noqa: E501
        """
        pass

    def test_games_stores_list(self):
        """Test case for games_stores_list

        Get links to the stores that sell the game.  # noqa: E501
        """
        pass

    def test_games_suggested_read(self):
        """Test case for games_suggested_read

        Get a list of visually similar games, available only for business and enterprise API users.  # noqa: E501
        """
        pass

    def test_games_twitch_read(self):
        """Test case for games_twitch_read

        Get streams on Twitch associated with the game, available only for business and enterprise API users.  # noqa: E501
        """
        pass

    def test_games_youtube_read(self):
        """Test case for games_youtube_read

        Get videos from YouTube associated with the game, available only for business and enterprise API users.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
