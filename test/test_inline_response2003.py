# coding: utf-8

"""
    RAWG Video Games Database API

     The largest open video games database.  ### Why build on RAWG - More than 350,000 games for 50 platforms including mobiles. - Rich metadata: tags, genres, developers, publishers, individual creators, official websites, release dates, Metacritic ratings. - Where to buy: links to digital distribution services - Similar games based on visual similarity. - Player activity data: Steam average playtime and RAWG player counts and ratings. - Actively developing and constantly getting better by user contribution and our algorithms.  ### Terms of Use - Free for personal use as long as you attribute RAWG as the source of the data and/or images and add an active hyperlink from every page where the data of RAWG is used. - Free for commercial use for startups and hobby projects with not more than 100,000 monthly active users or 500,000 page views per month. If your project is larger than that, email us at [api@rawg.io](mailto:api@rawg.io) for commercial terms. - No cloning. It would not be cool if you used our API to launch a clone of RAWG. We know it is not always easy to say what is a duplicate and what isn't. Drop us a line at [api@rawg.io](mailto:api@rawg.io) if you are in doubt, and we will talk it through. - Every API request should have a User-Agent header with your app name. If you donâ€™t provide it, we may ban your requests.  __[Read more](https://rawg.io/apidocs)__.   # noqa: E501

    The version of the OpenAPI document: v1.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import rawg
from rawg.models.inline_response2003 import InlineResponse2003  # noqa: E501
from rawg.rest import ApiException

class TestInlineResponse2003(unittest.TestCase):
    """InlineResponse2003 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test InlineResponse2003
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = rawg.models.inline_response2003.InlineResponse2003()  # noqa: E501
        if include_optional :
            return InlineResponse2003(
                count = 56, 
                next = '0', 
                previous = '0', 
                results = [
                    rawg.models.game.Game(
                        id = 56, 
                        slug = 'a', 
                        name = '0', 
                        released = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        tba = True, 
                        background_image = '0', 
                        rating = 1.337, 
                        rating_top = 56, 
                        ratings = rawg.models.ratings.Ratings(), 
                        ratings_count = 56, 
                        reviews_text_count = '0', 
                        added = 56, 
                        added_by_status = rawg.models.added_by_status.AddedByStatus(),
                        metacritic = 56, 
                        playtime = 56, 
                        suggestions_count = 56, )
                    ]
            )
        else :
            return InlineResponse2003(
                count = 56,
                results = [
                    rawg.models.game.Game(
                        id = 56, 
                        slug = 'a', 
                        name = '0', 
                        released = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        tba = True, 
                        background_image = '0', 
                        rating = 1.337, 
                        rating_top = 56, 
                        ratings = rawg.models.ratings.Ratings(), 
                        ratings_count = 56, 
                        reviews_text_count = '0', 
                        added = 56, 
                        added_by_status = rawg.models.added_by_status.AddedByStatus(),
                        metacritic = 56, 
                        playtime = 56, 
                        suggestions_count = 56, )
                    ],
        )

    def testInlineResponse2003(self):
        """Test InlineResponse2003"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
